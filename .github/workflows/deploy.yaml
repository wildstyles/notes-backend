on:
  push:
    branches:
      - develop
    tags:
      - '[0-9]*.[0-9]*.[0-9]*'

env:
  ECR_REPOSITORY_PREFIX: notes-backend
  EKS_CLUSTER_NAME: Kubernetes-demo
  AWS_REGION: eu-west-1

jobs:
  generate-image-tag:
    if: (github.event_name == 'tags' && github.ref == 'refs/heads/master') ||
      (contains('refs/heads/develop refs/heads/stage', github.ref) && github.event_name == 'push')
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.generate-image-tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Necessary to get all tags for IMAGE_TAG generation with git describe
          fetch-depth: 0

      - name: Generate Image Tag
        id: generate-image-tag
        run: |
          image_tag=$(git describe --tags --always --first-parent --match "[0-9]*.[0-9]*.[0-9]*")
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT
          echo "$image_tag"

  run-build:
    runs-on: ubuntu-latest
    needs: generate-image-tag
    strategy:
      matrix:
        service-name:
          - gateway-service
          - user-service
          - supplier-service

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push ${{ matrix.service-name }} image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ matrix.service-name }}
          IMAGE_TAG: ${{ needs.generate-image-tag.outputs.image_tag }}
          PORT: ${{ (matrix.service-name == 'gateway-service') && '3000' || '' }}
        run: make build_and_push_to_ecr prefix=$ECR_REGISTRY/$ECR_REPOSITORY_PREFIX project=$ECR_REPOSITORY tag=$IMAGE_TAG port=$PORT

    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    # - name: Deploy to EKS
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     IMAGE_TAG: ${{ steps.commit.outputs.short }}
    #   run: |
    #     sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
    #     kubectl apply -f manifests/hello-app-deployment.yaml
    #     kubectl apply -f manifests/hello-app-service.yaml
