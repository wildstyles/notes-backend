on:
  workflow_call:

env:
  ECR_REPOSITORY: gateway-service
  EKS_CLUSTER_NAME: Kubernetes-demo
  AWS_REGION: eu-west-1

jobs:
  run-build:
    runs-on: ubuntu-latest

    steps:
      # - name: Set short git commit SHA
      #   id: commit
      #   uses: prompt/actions-commit-hash@v2

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg PROJECT=gateway-service --build-arg PORT=3000 -f ./docker/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    # - name: Deploy to EKS
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     IMAGE_TAG: ${{ steps.commit.outputs.short }}
    #   run: |
    #     sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
    #     kubectl apply -f manifests/hello-app-deployment.yaml
    #     kubectl apply -f manifests/hello-app-service.yaml
