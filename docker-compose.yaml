version: '3.8'
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.3.2
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 2181:2181

  # kafka:
  #   image: confluentinc/cp-kafka:7.3.2
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 9092:9092
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # kafka_ui:
  #   image: provectuslabs/kafka-ui:latest
  #   depends_on:
  #     - kafka
  #   ports:
  #     - 8080:8080
  #   environment:
  #     LOGGING_LEVEL_ROOT: error
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  gateway-service:
    image: notes-backend/gateway-service
    # depends_on:
    # - kafka
    container_name: gateway-service
    build:
      context: .
    command: yarn start:dev gateway-service
    volumes:
      - .:/app
    ports:
      - 3000:3000
    networks:
      - loki

  user-service:
    image: notes-backend/user-service
    depends_on:
      - gateway-service
    container_name: user-service
    build:
      context: .
    command: yarn start:dev user-service
    networks:
      - loki
    volumes:
      - .:/app

  loki:
    image: grafana/loki:2.9.10
    command: -config.file=/etc/loki/loki-config.yml
    restart: unless-stopped
    volumes:
      - ./config/loki-config.yml:/etc/loki/loki-config.yml
    networks:
      - loki
    ports:
      - '3100:3100'

  promtail:
    image: grafana/promtail:2.9.10
    volumes:
      - ./config/promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro # https://ruanbekker.medium.com/logging-with-docker-promtail-and-grafana-loki-d920fd790ca8
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - loki
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:11.0.0
    user: '501'
    restart: unless-stopped
    volumes:
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana:/var/lib/grafana
    ports:
      - '9000:3000'
    networks:
      - loki

networks:
  loki:
